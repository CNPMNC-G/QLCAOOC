#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLCAOOC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCAOOC")]
	public partial class dbQLCAOOCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertTANG(TANG instance);
    partial void UpdateTANG(TANG instance);
    partial void DeleteTANG(TANG instance);
    partial void InsertCANHO(CANHO instance);
    partial void UpdateCANHO(CANHO instance);
    partial void DeleteCANHO(CANHO instance);
    partial void InsertDIENTICH(DIENTICH instance);
    partial void UpdateDIENTICH(DIENTICH instance);
    partial void DeleteDIENTICH(DIENTICH instance);
    partial void InsertGIA(GIA instance);
    partial void UpdateGIA(GIA instance);
    partial void DeleteGIA(GIA instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertNHANKHAU(NHANKHAU instance);
    partial void UpdateNHANKHAU(NHANKHAU instance);
    partial void DeleteNHANKHAU(NHANKHAU instance);
    partial void InsertPHIEUTHUTIEN(PHIEUTHUTIEN instance);
    partial void UpdatePHIEUTHUTIEN(PHIEUTHUTIEN instance);
    partial void DeletePHIEUTHUTIEN(PHIEUTHUTIEN instance);
    #endregion
		
		public dbQLCAOOCDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCAOOCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCAOOCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCAOOCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCAOOCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLCAOOCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<TANG> TANGs
		{
			get
			{
				return this.GetTable<TANG>();
			}
		}
		
		public System.Data.Linq.Table<CANHO> CANHOs
		{
			get
			{
				return this.GetTable<CANHO>();
			}
		}
		
		public System.Data.Linq.Table<DIENTICH> DIENTICHes
		{
			get
			{
				return this.GetTable<DIENTICH>();
			}
		}
		
		public System.Data.Linq.Table<GIA> GIAs
		{
			get
			{
				return this.GetTable<GIA>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANKHAU> NHANKHAUs
		{
			get
			{
				return this.GetTable<NHANKHAU>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUTHUTIEN> PHIEUTHUTIENs
		{
			get
			{
				return this.GetTable<PHIEUTHUTIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HoTen;
		
		private string _TenDN;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(20)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TANG")]
	public partial class TANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTang;
		
		private string _TenTang;
		
		private EntitySet<GIA> _GIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTangChanging(string value);
    partial void OnMaTangChanged();
    partial void OnTenTangChanging(string value);
    partial void OnTenTangChanged();
    #endregion
		
		public TANG()
		{
			this._GIAs = new EntitySet<GIA>(new Action<GIA>(this.attach_GIAs), new Action<GIA>(this.detach_GIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTang", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTang
		{
			get
			{
				return this._MaTang;
			}
			set
			{
				if ((this._MaTang != value))
				{
					this.OnMaTangChanging(value);
					this.SendPropertyChanging();
					this._MaTang = value;
					this.SendPropertyChanged("MaTang");
					this.OnMaTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTang", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenTang
		{
			get
			{
				return this._TenTang;
			}
			set
			{
				if ((this._TenTang != value))
				{
					this.OnTenTangChanging(value);
					this.SendPropertyChanging();
					this._TenTang = value;
					this.SendPropertyChanged("TenTang");
					this.OnTenTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TANG_GIA", Storage="_GIAs", ThisKey="MaTang", OtherKey="MaTang")]
		public EntitySet<GIA> GIAs
		{
			get
			{
				return this._GIAs;
			}
			set
			{
				this._GIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIAs(GIA entity)
		{
			this.SendPropertyChanging();
			entity.TANG = this;
		}
		
		private void detach_GIAs(GIA entity)
		{
			this.SendPropertyChanging();
			entity.TANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CANHO")]
	public partial class CANHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCanHo;
		
		private string _TinhTrang;
		
		private string _HinhAnh;
		
		private string _GhiChu;
		
		private string _MaDienTich;
		
		private string _MaTang;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
		private EntityRef<GIA> _GIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCanHoChanging(string value);
    partial void OnMaCanHoChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaDienTichChanging(string value);
    partial void OnMaDienTichChanged();
    partial void OnMaTangChanging(string value);
    partial void OnMaTangChanged();
    #endregion
		
		public CANHO()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			this._GIA = default(EntityRef<GIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCanHo", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCanHo
		{
			get
			{
				return this._MaCanHo;
			}
			set
			{
				if ((this._MaCanHo != value))
				{
					this.OnMaCanHoChanging(value);
					this.SendPropertyChanging();
					this._MaCanHo = value;
					this.SendPropertyChanged("MaCanHo");
					this.OnMaCanHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(20)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDienTich", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaDienTich
		{
			get
			{
				return this._MaDienTich;
			}
			set
			{
				if ((this._MaDienTich != value))
				{
					if (this._GIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDienTichChanging(value);
					this.SendPropertyChanging();
					this._MaDienTich = value;
					this.SendPropertyChanged("MaDienTich");
					this.OnMaDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTang", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaTang
		{
			get
			{
				return this._MaTang;
			}
			set
			{
				if ((this._MaTang != value))
				{
					if (this._GIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTangChanging(value);
					this.SendPropertyChanging();
					this._MaTang = value;
					this.SendPropertyChanged("MaTang");
					this.OnMaTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CANHO_HOPDONG", Storage="_HOPDONGs", ThisKey="MaCanHo", OtherKey="MaCanHo")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIA_CANHO", Storage="_GIA", ThisKey="MaDienTich,MaTang", OtherKey="MaDienTich,MaTang", IsForeignKey=true)]
		public GIA GIA
		{
			get
			{
				return this._GIA.Entity;
			}
			set
			{
				GIA previousValue = this._GIA.Entity;
				if (((previousValue != value) 
							|| (this._GIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIA.Entity = null;
						previousValue.CANHOs.Remove(this);
					}
					this._GIA.Entity = value;
					if ((value != null))
					{
						value.CANHOs.Add(this);
						this._MaDienTich = value.MaDienTich;
						this._MaTang = value.MaTang;
					}
					else
					{
						this._MaDienTich = default(string);
						this._MaTang = default(string);
					}
					this.SendPropertyChanged("GIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.CANHO = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.CANHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIENTICH")]
	public partial class DIENTICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDienTich;
		
		private string _TenDienTich;
		
		private EntitySet<GIA> _GIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDienTichChanging(string value);
    partial void OnMaDienTichChanged();
    partial void OnTenDienTichChanging(string value);
    partial void OnTenDienTichChanged();
    #endregion
		
		public DIENTICH()
		{
			this._GIAs = new EntitySet<GIA>(new Action<GIA>(this.attach_GIAs), new Action<GIA>(this.detach_GIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDienTich", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDienTich
		{
			get
			{
				return this._MaDienTich;
			}
			set
			{
				if ((this._MaDienTich != value))
				{
					this.OnMaDienTichChanging(value);
					this.SendPropertyChanging();
					this._MaDienTich = value;
					this.SendPropertyChanged("MaDienTich");
					this.OnMaDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDienTich", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TenDienTich
		{
			get
			{
				return this._TenDienTich;
			}
			set
			{
				if ((this._TenDienTich != value))
				{
					this.OnTenDienTichChanging(value);
					this.SendPropertyChanging();
					this._TenDienTich = value;
					this.SendPropertyChanged("TenDienTich");
					this.OnTenDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIENTICH_GIA", Storage="_GIAs", ThisKey="MaDienTich", OtherKey="MaDienTich")]
		public EntitySet<GIA> GIAs
		{
			get
			{
				return this._GIAs;
			}
			set
			{
				this._GIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIAs(GIA entity)
		{
			this.SendPropertyChanging();
			entity.DIENTICH = this;
		}
		
		private void detach_GIAs(GIA entity)
		{
			this.SendPropertyChanging();
			entity.DIENTICH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIA")]
	public partial class GIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDienTich;
		
		private string _MaTang;
		
		private int _Gia1;
		
		private EntitySet<CANHO> _CANHOs;
		
		private EntityRef<DIENTICH> _DIENTICH;
		
		private EntityRef<TANG> _TANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDienTichChanging(string value);
    partial void OnMaDienTichChanged();
    partial void OnMaTangChanging(string value);
    partial void OnMaTangChanged();
    partial void OnGia1Changing(int value);
    partial void OnGia1Changed();
    #endregion
		
		public GIA()
		{
			this._CANHOs = new EntitySet<CANHO>(new Action<CANHO>(this.attach_CANHOs), new Action<CANHO>(this.detach_CANHOs));
			this._DIENTICH = default(EntityRef<DIENTICH>);
			this._TANG = default(EntityRef<TANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDienTich", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDienTich
		{
			get
			{
				return this._MaDienTich;
			}
			set
			{
				if ((this._MaDienTich != value))
				{
					if (this._DIENTICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDienTichChanging(value);
					this.SendPropertyChanging();
					this._MaDienTich = value;
					this.SendPropertyChanged("MaDienTich");
					this.OnMaDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTang", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTang
		{
			get
			{
				return this._MaTang;
			}
			set
			{
				if ((this._MaTang != value))
				{
					if (this._TANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTangChanging(value);
					this.SendPropertyChanging();
					this._MaTang = value;
					this.SendPropertyChanged("MaTang");
					this.OnMaTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Gia", Storage="_Gia1", DbType="Int NOT NULL")]
		public int Gia1
		{
			get
			{
				return this._Gia1;
			}
			set
			{
				if ((this._Gia1 != value))
				{
					this.OnGia1Changing(value);
					this.SendPropertyChanging();
					this._Gia1 = value;
					this.SendPropertyChanged("Gia1");
					this.OnGia1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIA_CANHO", Storage="_CANHOs", ThisKey="MaDienTich,MaTang", OtherKey="MaDienTich,MaTang")]
		public EntitySet<CANHO> CANHOs
		{
			get
			{
				return this._CANHOs;
			}
			set
			{
				this._CANHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIENTICH_GIA", Storage="_DIENTICH", ThisKey="MaDienTich", OtherKey="MaDienTich", IsForeignKey=true)]
		public DIENTICH DIENTICH
		{
			get
			{
				return this._DIENTICH.Entity;
			}
			set
			{
				DIENTICH previousValue = this._DIENTICH.Entity;
				if (((previousValue != value) 
							|| (this._DIENTICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIENTICH.Entity = null;
						previousValue.GIAs.Remove(this);
					}
					this._DIENTICH.Entity = value;
					if ((value != null))
					{
						value.GIAs.Add(this);
						this._MaDienTich = value.MaDienTich;
					}
					else
					{
						this._MaDienTich = default(string);
					}
					this.SendPropertyChanged("DIENTICH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TANG_GIA", Storage="_TANG", ThisKey="MaTang", OtherKey="MaTang", IsForeignKey=true)]
		public TANG TANG
		{
			get
			{
				return this._TANG.Entity;
			}
			set
			{
				TANG previousValue = this._TANG.Entity;
				if (((previousValue != value) 
							|| (this._TANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TANG.Entity = null;
						previousValue.GIAs.Remove(this);
					}
					this._TANG.Entity = value;
					if ((value != null))
					{
						value.GIAs.Add(this);
						this._MaTang = value.MaTang;
					}
					else
					{
						this._MaTang = default(string);
					}
					this.SendPropertyChanged("TANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CANHOs(CANHO entity)
		{
			this.SendPropertyChanging();
			entity.GIA = this;
		}
		
		private void detach_CANHOs(CANHO entity)
		{
			this.SendPropertyChanging();
			entity.GIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHopDong;
		
		private System.DateTime _NgayBatDauThue;
		
		private System.DateTime _NgayHetHan;
		
		private int _MaNK;
		
		private string _MaCanHo;
		
		private int _GiaPhong;
		
		private int _ThoiGianThue;
		
		private int _DaThanhToan;
		
		private EntitySet<NHANKHAU> _NHANKHAUs;
		
		private EntitySet<PHIEUTHUTIEN> _PHIEUTHUTIENs;
		
		private EntityRef<CANHO> _CANHO;
		
		private EntityRef<NHANKHAU> _NHANKHAU;
        private int v1;
        private int v2;
        private int v3;
        private int v4;
        private int v5;
        private int v6;

        #region Extensibility Method Definitions
        partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHopDongChanging(int value);
    partial void OnMaHopDongChanged();
    partial void OnNgayBatDauThueChanging(System.DateTime value);
    partial void OnNgayBatDauThueChanged();
    partial void OnNgayHetHanChanging(System.DateTime value);
    partial void OnNgayHetHanChanged();
    partial void OnMaNKChanging(int value);
    partial void OnMaNKChanged();
    partial void OnMaCanHoChanging(string value);
    partial void OnMaCanHoChanged();
    partial void OnGiaPhongChanging(int value);
    partial void OnGiaPhongChanged();
    partial void OnThoiGianThueChanging(int value);
    partial void OnThoiGianThueChanged();
    partial void OnDaThanhToanChanging(int value);
    partial void OnDaThanhToanChanged();
    #endregion
		
		public HOPDONG()
		{
			this._NHANKHAUs = new EntitySet<NHANKHAU>(new Action<NHANKHAU>(this.attach_NHANKHAUs), new Action<NHANKHAU>(this.detach_NHANKHAUs));
			this._PHIEUTHUTIENs = new EntitySet<PHIEUTHUTIEN>(new Action<PHIEUTHUTIEN>(this.attach_PHIEUTHUTIENs), new Action<PHIEUTHUTIEN>(this.detach_PHIEUTHUTIENs));
			this._CANHO = default(EntityRef<CANHO>);
			this._NHANKHAU = default(EntityRef<NHANKHAU>);
			OnCreated();
		}

        public HOPDONG(int v1, int v2, int v3, int v4, int v5, int v6)
        {
            this.v1 = v1;
            this.v2 = v2;
            this.v3 = v3;
            this.v4 = v4;
            this.v5 = v5;
            this.v6 = v6;
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHopDong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHopDong
		{
			get
			{
				return this._MaHopDong;
			}
			set
			{
				if ((this._MaHopDong != value))
				{
					this.OnMaHopDongChanging(value);
					this.SendPropertyChanging();
					this._MaHopDong = value;
					this.SendPropertyChanged("MaHopDong");
					this.OnMaHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDauThue", DbType="Date NOT NULL")]
		public System.DateTime NgayBatDauThue
		{
			get
			{
				return this._NgayBatDauThue;
			}
			set
			{
				if ((this._NgayBatDauThue != value))
				{
					this.OnNgayBatDauThueChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDauThue = value;
					this.SendPropertyChanged("NgayBatDauThue");
					this.OnNgayBatDauThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="Date NOT NULL")]
		public System.DateTime NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="Int NOT NULL")]
		public int MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					if (this._NHANKHAU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCanHo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaCanHo
		{
			get
			{
				return this._MaCanHo;
			}
			set
			{
				if ((this._MaCanHo != value))
				{
					if (this._CANHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCanHoChanging(value);
					this.SendPropertyChanging();
					this._MaCanHo = value;
					this.SendPropertyChanged("MaCanHo");
					this.OnMaCanHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaPhong", DbType="Int NOT NULL")]
		public int GiaPhong
		{
			get
			{
				return this._GiaPhong;
			}
			set
			{
				if ((this._GiaPhong != value))
				{
					this.OnGiaPhongChanging(value);
					this.SendPropertyChanging();
					this._GiaPhong = value;
					this.SendPropertyChanged("GiaPhong");
					this.OnGiaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianThue", DbType="Int NOT NULL")]
		public int ThoiGianThue
		{
			get
			{
				return this._ThoiGianThue;
			}
			set
			{
				if ((this._ThoiGianThue != value))
				{
					this.OnThoiGianThueChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianThue = value;
					this.SendPropertyChanged("ThoiGianThue");
					this.OnThoiGianThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Int NOT NULL")]
		public int DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_NHANKHAU", Storage="_NHANKHAUs", ThisKey="MaHopDong", OtherKey="MaHopDong")]
		public EntitySet<NHANKHAU> NHANKHAUs
		{
			get
			{
				return this._NHANKHAUs;
			}
			set
			{
				this._NHANKHAUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_PHIEUTHUTIEN", Storage="_PHIEUTHUTIENs", ThisKey="MaHopDong", OtherKey="MaHopDong")]
		public EntitySet<PHIEUTHUTIEN> PHIEUTHUTIENs
		{
			get
			{
				return this._PHIEUTHUTIENs;
			}
			set
			{
				this._PHIEUTHUTIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CANHO_HOPDONG", Storage="_CANHO", ThisKey="MaCanHo", OtherKey="MaCanHo", IsForeignKey=true)]
		public CANHO CANHO
		{
			get
			{
				return this._CANHO.Entity;
			}
			set
			{
				CANHO previousValue = this._CANHO.Entity;
				if (((previousValue != value) 
							|| (this._CANHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CANHO.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._CANHO.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MaCanHo = value.MaCanHo;
					}
					else
					{
						this._MaCanHo = default(string);
					}
					this.SendPropertyChanged("CANHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANKHAU_HOPDONG", Storage="_NHANKHAU", ThisKey="MaNK", OtherKey="MaNK", IsForeignKey=true)]
		public NHANKHAU NHANKHAU
		{
			get
			{
				return this._NHANKHAU.Entity;
			}
			set
			{
				NHANKHAU previousValue = this._NHANKHAU.Entity;
				if (((previousValue != value) 
							|| (this._NHANKHAU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANKHAU.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._NHANKHAU.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MaNK = value.MaNK;
					}
					else
					{
						this._MaNK = default(int);
					}
					this.SendPropertyChanged("NHANKHAU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANKHAUs(NHANKHAU entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_NHANKHAUs(NHANKHAU entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
		
		private void attach_PHIEUTHUTIENs(PHIEUTHUTIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_PHIEUTHUTIENs(PHIEUTHUTIEN entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANKHAU")]
	public partial class NHANKHAU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNK;
		
		private string _HoTen;
		
		private int _CMND;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private string _HinhAnh;
		
		private System.Nullable<int> _MaHopDong;
		
		private string _TenDN;
		
		private string _MatKhau;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNKChanging(int value);
    partial void OnMaNKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnCMNDChanging(int value);
    partial void OnCMNDChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMaHopDongChanging(System.Nullable<int> value);
    partial void OnMaHopDongChanged();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public NHANKHAU()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			this._HOPDONG = default(EntityRef<HOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int NOT NULL")]
		public int CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHopDong", DbType="Int")]
		public System.Nullable<int> MaHopDong
		{
			get
			{
				return this._MaHopDong;
			}
			set
			{
				if ((this._MaHopDong != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHopDongChanging(value);
					this.SendPropertyChanging();
					this._MaHopDong = value;
					this.SendPropertyChanged("MaHopDong");
					this.OnMaHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="VarChar(20)")]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANKHAU_HOPDONG", Storage="_HOPDONGs", ThisKey="MaNK", OtherKey="MaNK")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_NHANKHAU", Storage="_HOPDONG", ThisKey="MaHopDong", OtherKey="MaHopDong", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.NHANKHAUs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.NHANKHAUs.Add(this);
						this._MaHopDong = value.MaHopDong;
					}
					else
					{
						this._MaHopDong = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANKHAU = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANKHAU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUTHUTIEN")]
	public partial class PHIEUTHUTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuThu;
		
		private int _MaHopDong;
		
		private int _DotThu;
		
		private System.DateTime _NgayThu;
		
		private int _SoThangThu;
		
		private int _SoTien;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuThuChanging(int value);
    partial void OnMaPhieuThuChanged();
    partial void OnMaHopDongChanging(int value);
    partial void OnMaHopDongChanged();
    partial void OnDotThuChanging(int value);
    partial void OnDotThuChanged();
    partial void OnNgayThuChanging(System.DateTime value);
    partial void OnNgayThuChanged();
    partial void OnSoThangThuChanging(int value);
    partial void OnSoThangThuChanged();
    partial void OnSoTienChanging(int value);
    partial void OnSoTienChanged();
    #endregion
		
		public PHIEUTHUTIEN()
		{
			this._HOPDONG = default(EntityRef<HOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuThu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuThu
		{
			get
			{
				return this._MaPhieuThu;
			}
			set
			{
				if ((this._MaPhieuThu != value))
				{
					this.OnMaPhieuThuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuThu = value;
					this.SendPropertyChanged("MaPhieuThu");
					this.OnMaPhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHopDong", DbType="Int NOT NULL")]
		public int MaHopDong
		{
			get
			{
				return this._MaHopDong;
			}
			set
			{
				if ((this._MaHopDong != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHopDongChanging(value);
					this.SendPropertyChanging();
					this._MaHopDong = value;
					this.SendPropertyChanged("MaHopDong");
					this.OnMaHopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DotThu", DbType="Int NOT NULL")]
		public int DotThu
		{
			get
			{
				return this._DotThu;
			}
			set
			{
				if ((this._DotThu != value))
				{
					this.OnDotThuChanging(value);
					this.SendPropertyChanging();
					this._DotThu = value;
					this.SendPropertyChanged("DotThu");
					this.OnDotThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThu", DbType="Date NOT NULL")]
		public System.DateTime NgayThu
		{
			get
			{
				return this._NgayThu;
			}
			set
			{
				if ((this._NgayThu != value))
				{
					this.OnNgayThuChanging(value);
					this.SendPropertyChanging();
					this._NgayThu = value;
					this.SendPropertyChanged("NgayThu");
					this.OnNgayThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThangThu", DbType="Int NOT NULL")]
		public int SoThangThu
		{
			get
			{
				return this._SoThangThu;
			}
			set
			{
				if ((this._SoThangThu != value))
				{
					this.OnSoThangThuChanging(value);
					this.SendPropertyChanging();
					this._SoThangThu = value;
					this.SendPropertyChanged("SoThangThu");
					this.OnSoThangThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Int NOT NULL")]
		public int SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_PHIEUTHUTIEN", Storage="_HOPDONG", ThisKey="MaHopDong", OtherKey="MaHopDong", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.PHIEUTHUTIENs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.PHIEUTHUTIENs.Add(this);
						this._MaHopDong = value.MaHopDong;
					}
					else
					{
						this._MaHopDong = default(int);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
